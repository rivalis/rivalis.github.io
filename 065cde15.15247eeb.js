(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{72:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return s}));var r=a(3),n=a(7),o=(a(0),a(100)),i={id:"roadmap",title:"Roadmap",slug:"/intro/roadmap"},l={unversionedId:"intro/roadmap",id:"intro/roadmap",isDocsHomePage:!1,title:"Roadmap",description:"core features",source:"@site/docs/intro/roadmap.md",slug:"/intro/roadmap",permalink:"/docs/intro/roadmap",editUrl:"https://github.com/rivalis/rivalis.github.io/edit/main/docs/intro/roadmap.md",version:"current",sidebar:"docs",previous:{title:"Welcome",permalink:"/docs/"},next:{title:"Getting Started",permalink:"/docs/intro/getting-started"}},c=[{value:"core features",id:"core-features",children:[]},{value:"protocols",id:"protocols",children:[]},{value:"agents",id:"agents",children:[]}],b={toc:c};function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"core-features"},"core features"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"\u2705 Initial version of rivalis-core where base features are implemented"),Object(o.b)("li",{parentName:"ul"},'Distributed job scheduler and job handler via rivalis entities called "Systems"'),Object(o.b)("li",{parentName:"ul"},"P2P connection between multiple rivalis instances")),Object(o.b)("h2",{id:"protocols"},"protocols"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"\u2705 WebSocket"),Object(o.b)("li",{parentName:"ul"},"WebRTC"),Object(o.b)("li",{parentName:"ul"},"TCP")),Object(o.b)("h2",{id:"agents"},"agents"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"\u2705 WebSocket (Browser)"),Object(o.b)("li",{parentName:"ul"},"WebSocket agent (NodeJS)"),Object(o.b)("li",{parentName:"ul"},"WebSocket agent (C#)"),Object(o.b)("li",{parentName:"ul"},"WebRTC agent (Browser)"),Object(o.b)("li",{parentName:"ul"},"WebRTC agent (NodeJS)"),Object(o.b)("li",{parentName:"ul"},"WebRTC agent (C#)"),Object(o.b)("li",{parentName:"ul"},"TCP agent (NodeJS)"),Object(o.b)("li",{parentName:"ul"},"TCP agent (C#)")))}s.isMDXComponent=!0}}]);